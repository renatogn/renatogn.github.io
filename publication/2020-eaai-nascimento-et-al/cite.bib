@article{2020_EAAI_nascimento_et_al,
title = "A tutorial on solving ordinary differential equations using Python and hybrid physics-informed neural network",
journal = "Engineering Applications of Artificial Intelligence",
volume = "96",
pages = "103996",
year = "2020",
issn = "0952-1976",
doi = "https://doi.org/10.1016/j.engappai.2020.103996",
url = "http://www.sciencedirect.com/science/article/pii/S095219762030292X",
author = "Renato G. Nascimento and Kajetan Fricke and Felipe A.C. Viana",
keywords = "Physics-informed neural network, Scientific machine learning, Uncertainty quantification, Hybrid model python implementation",
abstract = "We present a tutorial on how to directly implement integration of ordinary differential equations through recurrent neural networks using Python. In order to simplify the implementation, we leveraged modern machine learning frameworks such as TensorFlow and Keras. Besides, offering implementation of basic models (such as multilayer perceptrons and recurrent neural networks) and optimization methods, these frameworks offer powerful automatic differentiation. With all that, the main advantage of our approach is that one can implement hybrid models combining physics-informed and data-driven kernels, where data-driven kernels are used to reduce the gap between predictions and observations. Alternatively, we can also perform model parameter identification. In order to illustrate our approach, we used two case studies. The first one consisted of performing fatigue crack growth integration through Euler’s forward method using a hybrid model combining a data-driven stress intensity range model with a physics-based crack length increment model. The second case study consisted of performing model parameter identification of a dynamic two-degree-of-freedom system through Runge–Kutta integration. The examples presented here as well as source codes are all open-source under the GitHub repository https://github.com/PML-UCF/pinn_code_tutorial."
}

